#####################
# Multi stage build #
#####################

ARG GITHUB_SHA=NO_COMMIT
ARG VERSION=NO_VERSION

#########################################
## Build rapportnav backend with gradle #
#########################################
#FROM gradle:8.5-jdk17 as build-backend
#
#ARG GITHUB_SHA
#ARG VERSION
#
#WORKDIR /tmp
#
#COPY backend/ /tmp
#COPY backend/pom.xml /tmp/backend/POM_WITH_ENV_VARS
#
#RUN gradle clean assemble


########################################
# Build rapportnav backend with gradle #
########################################
FROM gradle:8.5-jdk17 as run-backend

ARG GITHUB_SHA
ARG VERSION

WORKDIR /tmp/backend

COPY backend/ /tmp/backend
COPY infra/ /tmp/infra

EXPOSE 80
RUN gradle bootRun --args='--spring.profiles.active=prod --spring.config.additional-location=/tmp/infra/configurations/backend/'

########################################
# Build frontend                       #
########################################
# Stage 1: Build npm dependencies
FROM node:20 AS npm-dependencies
WORKDIR /tmp/frontend
COPY frontend/package.json frontend/package-lock.json ./
RUN npm install

# Stage 2: Build the application
FROM node:20 AS run-frontend
WORKDIR /tmp/frontend
COPY --from=npm-dependencies /tmp/frontend/node_modules ./node_modules
COPY frontend .
EXPOSE 5173
RUN npm run dev --mode dev --host


#########################################
## Build frontend                       #
#########################################
## Stage 1: Download npm dependencies
## this stage will not run if dependencies have not changed
#FROM node:18 AS npm-dependencies
#WORKDIR /tmp/frontend
#COPY frontend/package.json frontend/package-lock.json ./
#RUN npm ci
#
## Stage 2: Build the application
#FROM node:18 AS build-frontend
#WORKDIR /tmp/frontend
#COPY --from=npm-dependencies /tmp/frontend/node_modules ./node_modules
#COPY frontend .
#RUN npm run build --verbose

########################################
# Run Application                      #
########################################
#FROM azul/zulu-openjdk-debian:17-latest as run-backend
#
#WORKDIR /home/rapportnav
#
#ARG VERSION=1.0.2
#ENV VERSION=$VERSION
#
#ARG ENV_PROFILE
#ENV ENV_PROFILE=dev
#
#ENV SPRING_PROFILES_ACTIVE=$ENV_PROFILE
#
## ENV REACT_APP_ENV=$ENV_PROFILE
#ENV ENV_DB_URL=""
#
## copy backend related things
#COPY --from=build-backend /tmp/backend/build/libs/rapportnav-${VERSION}.jar /home/rapportnav
#COPY infra/configurations/backend /home/rapportnav/configurations/
#
#
## RUN mkdir /home/rapportnav/public
## COPY --from=buildSourcemaps /tmp/frontend/build /home/rapportnav/public/
# COPY --from=build-frontend /tmp/frontend/dist /home/rapportnav/public/
## COPY --from=build-frontend /tmp/infra/docker/tmp/env.sh /home/rapportnav/
#
## Add logs folder to be mounted as volume
#RUN mkdir /home/rapportnav/logs
#
## Set up environement variable that define the root folder use for serving static files
## It must point to the front (React) files
#ENV STATIC_FILES_PATH=/home/rapportnav/public
#
#
## CMD exec java -jar "/home/rapportnav/rapportnav-${VERSION}.jar"
#CMD exec java -Dspring.config.additional-location="/home/rapportnav/configurations/" -Dspring.profiles.active=$ENV_PROFILE -jar "/home/rapportnav/rapportnav-${VERSION}.jar"





