version: '3.8'
name: rapportnav2
services:
  backend:
    build:
      context: ..
      dockerfile: ./infra/docker/app/DockerfileLocalBack
    ports:
      - "80:80"
    depends_on:
      - db
    volumes:
      - ../backend:/tmp/backend
      - ../infra/configurations/backend:/tmp/backend/configurations
    environment:
      - VERSION=NO_VERSION
      - ENV_PROFILE=local
      - ENV_DB_URL=jdbc:postgresql://db:5432/rapportnavdb?user=postgres&password=postgres
      - MONITORFISH_API_KEY=dummy-key
      - JWT_SECURITY_KEY=dummy-key

  frontend:
    build:
      context: ../frontend
      dockerfile: ../infra/docker/app/DockerfileLocalFront
    ports:
      - "5173:5173"
    volumes:
      - ../frontend:/tmp/frontend

  db:
    image: postgres:15.10-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: rapportnavdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db:/var/lib/postgresql/data

#  metabase:
#    image: metabase/metabase:latest
#    ports:
#      - "3000:3000"
#    volumes:
#      - metabase_data:/metabase-data
#    environment:
#      # - MB_DB_CONNECTION_URI="db:5432/rapportnavdb?user=postgres&password=postgres"
#      - MB_DB_CONNECTION_URI=postgres://db:5432/rapportnavdb?currentSchema=metabase
#      - MB_DB_FILE=/metabase-data/metabase.db
#      - MB_DB_TYPE=postgres
#      # - MB_DB_DBNAME=rapportnavdb
#      # - MB_DB_PORT=5432
#      - MB_DB_USER=postgres
#      - MB_DB_PASS=postgres
#      # - MB_DB_HOST=db
#    restart: always
#    depends_on:
#      - db

volumes:
  db:
    name: rapportnavdb
#  metabase_data:
