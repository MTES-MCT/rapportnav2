# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: "[Analyse] Trivy"

on:
  #  push:
  #    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * *" # 3am every night

permissions:
  contents: read

jobs:
  build:
    permissions:
      packages: write
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Analyse
    runs-on: "ubuntu-20.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Get frontend version
        uses: avides/actions-project-version-check@v1.4.0
        id: frontend_version
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          file-to-check: frontend/package.json
          only-return-version: true

      - name: use-version-from-check
        run: echo "The version we just got is ${{ steps.frontend_version.outputs.version }}"

      - name: Build image
        uses: docker/build-push-action@v4
        env:
          GITHUB_SHA: ${{ github.sha }}
          VERSION: ${{ steps.frontend_version.outputs.version }}
          ENV_PROFILE: "prod"
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: infra/docker/app/DockerfileCI
          push: true
          tags: |
            ghcr.io/mtes-mct/rapportnav2/rapportnav-app:${{ github.sha }}
          build-args: |
            VERSION=${{ env.VERSION }}
            ENV_PROFILE=${{ env.ENV_PROFILE }}
            GITHUB_SHA=${{ github.sha }}

      - name: Run Trivy on OS
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "ghcr.io/mtes-mct/rapportnav2/rapportnav-app:${{ github.sha }}"
          format: sarif
          vuln-type: "os"
          output: "trivy-results-os.sarif"
          severity: "LOW,MEDIUM,HIGH,CRITICAL"

      - name: Upload Trivy OS scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results-os.sarif"
          category: "trivy-os"

      - name: Run Trivy on libraries
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "ghcr.io/mtes-mct/rapportnav2/rapportnav-app:${{ github.sha }}"
          format: sarif
          vuln-type: "library"
          output: "trivy-results-libs.sarif"
          severity: "HIGH,CRITICAL"

      - name: Upload Trivy Library scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results-libs.sarif"
          category: "trivy-libs"
