extend type Query {
    actionById(id: ID!, missionId: ID!, source: MissionSource!, type: ActionType!): Action
}
extend type Mutation {
    addOrUpdateStatus(statusAction: ActionStatusInput!): NavActionStatus!
    deleteStatus(id: String!): Boolean!
    addOrUpdateControl(controlAction: ActionControlInput!): NavActionControl!
    deleteControl(id: String!): Boolean!
}

type Action {
    id: String
    startDateTimeUtc: String!
    endDateTimeUtc: String
    source: MissionSource!
    status: ActionStatusType!
    type: ActionType
    summaryTags: [String]
    data: ActionData
}

input ActionStatusInput {
    id: String
    missionId: Int!
    startDateTimeUtc: String
    status: ActionStatusType!
    reason: ActionStatusReason
    isStart: Boolean!
    observations: String
}

input ActionControlInput {
    id: String
    missionId: Int!
    startDateTimeUtc: String
    endDateTimeUtc: String
    controlMethod: ControlMethod!
    latitude: Float
    longitude: Float
    vesselType: VesselType!
    vesselIdentifier: String
    vesselSize: VesselSize
    identityControlledPerson: String
    observations: String
}

enum MissionSource {
    MONITORENV
    MONITORFISH
    POSEIDON_CACEM
    POSEIDON_CNSP
    RAPPORTNAV
}

union ActionData =
    FishActionData
    | EnvActionData
    | NavActionControl
    | NavActionStatus

type NavActionStatus {
    id: String!
    startDateTimeUtc: String!
    status: ActionStatusType!
    reason: ActionStatusReason
    isStart: Boolean!
    observations: String
}

enum ActionStatusType {
    NAVIGATING
    ANCHORED
    DOCKED
    UNAVAILABLE
    UNKNOWN
}
enum ActionStatusReason {
    MAINTENANCE
    WEATHER
    REPRESENTATION
    ADMINISTRATION
    HARBOUR_CONTROL
    TECHNICAL
    PERSONNEL
    OTHER
}

type NavActionControl {
    id: String!
    startDateTimeUtc: String!
    endDateTimeUtc: String
    controlMethod: ControlMethod
    latitude: Float
    longitude: Float
    vesselType: VesselType
    vesselIdentifier: String
    vesselSize: VesselSize
    identityControlledPerson: String
    observations: String
    controlAdministrative: ControlAdministrative
    controlGensDeMer: ControlGensDeMer
    controlNavigation: ControlNavigation
    controlSecurity: ControlSecurity
}

enum ControlMethod {
    SEA
    AIR
    LAND
}

enum VesselType {
    FISHING
    SAILING
    MOTOR
    COMMERCIAL
    SAILING_LEISURE
}

enum VesselSize {
    LESS_THAN_12m
    FROM_12_TO_24m
    FROM_24_TO_46m
    MORE_THAN_46m
}

enum ActionType {
    CONTROL
    SURVEILLANCE
    CONTACT
    NOTE
    STATUS
    OTHER
}

type EnvActionData {
    id: String!
    actionStartDateTimeUtc: String!
    actionEndDateTimeUtc: String!
    geom: String
    facade: String
    department: String
    themes: [ThemeEntity]
    observations: String
    infractions: [InfractionByTarget]
    actionNumberOfControls: Int
    actionTargetType: ActionTargetTypeEnum
    vehicleType: VehicleTypeEnum
    availableControlTypesForInfraction: [ControlType]
    controlsToComplete: [ControlType]
    controlAdministrative: ControlAdministrative
    controlGensDeMer: ControlGensDeMer
    controlNavigation: ControlNavigation
    controlSecurity: ControlSecurity
}

type FishActionData {
    id: String!
    actionDatetimeUtc: String!
    vesselId: Int
    vesselName: String
    latitude: Float
    longitude: Float
    facade: String
    actionType: FishActionType
    controlsToComplete: [ControlType]
    controlAdministrative: ControlAdministrative
    controlGensDeMer: ControlGensDeMer
    controlNavigation: ControlNavigation
    controlSecurity: ControlSecurity
    emitsVms: ControlCheck
    emitsAis: ControlCheck
    licencesMatchActivity: ControlCheck
    logbookMatchesActivity: ControlCheck
    licencesAndLogbookObservations: String
    gearOnboard: [GearControl]
    speciesOnboard: [SpeciesControl]
    speciesObservations: String
    seizureAndDiversion: Boolean
    seizureAndDiversionComments: String
    hasSomeGearsSeized: Boolean
    hasSomeSpeciesSeized: Boolean
    otherComments: String
    vesselTargeted: ControlCheck
    unitWithoutOmegaGauge: Boolean
    controlQualityComments: String
    feedbackSheetRequired: Boolean
    userTrigram: String
    faoAreas: [String]
    segments: [FleetSegment]
}

type FleetSegment {
    segment: String
    segmentName: String
}

type GearControl {
    comments: String
    controlledMesh: Float
    declaredMesh: Float
    gearCode: String
    gearName: String
    gearWasControlled: Boolean
    hasUncontrolledMesh: Boolean
}

type SpeciesControl {
    speciesCode: String
    nbFish: Float
    declaredWeight: Float
    controlledWeight: Float
    underSized: Boolean
}


enum ControlCheck {
    YES
    NO
    NOT_APPLICABLE
}

enum FishActionType {
    SEA_CONTROL
    LAND_CONTROL
    AIR_CONTROL
    AIR_SURVEILLANCE
    OBSERVATION
}

type ThemeEntity {
    theme: String
    subThemes: [String]
    protectedSpecies: [String]
}

enum ActionTargetTypeEnum {
    VEHICLE
    COMPANY
    INDIVIDUAL
}

enum VehicleTypeEnum {
    VESSEL
    OTHER_SEA
    VEHICLE_LAND
    VEHICLE_AIR
}
