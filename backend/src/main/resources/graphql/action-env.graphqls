extend type Mutation {
  patchActionEnv(action: ActionEnvInput!): PatchedEnvAction
}

type PatchedEnvAction {
  id: String!
  observationsByUnit: String
  startDateTimeUtc: String
  endDateTimeUtc: String
}

type EnvActionData {
  id: String!
  actionStartDateTimeUtc: String!
  actionEndDateTimeUtc: String!
  geom: String
  facade: String
  department: String
  observations: String
  observationsByUnit: String
  infractions: [InfractionByTarget]
  actionNumberOfControls: Int
  actionTargetType: ActionTargetTypeEnum
  vehicleType: VehicleTypeEnum
  availableControlTypesForInfraction: [ControlType]
  controlsToComplete: [ControlType]
  controlAdministrative: ControlAdministrative
  controlGensDeMer: ControlGensDeMer
  controlNavigation: ControlNavigation
  controlSecurity: ControlSecurity
  formattedControlPlans: FormattedEnvActionControlPlan
}

type FormattedEnvActionControlPlan {
  themes: [String]
  subThemes: [String]
  tags: [String]
}

input ActionEnvInput {
  missionId: ID!
  actionId: String!
  observationsByUnit: String
  startDateTimeUtc: String
  endDateTimeUtc: String
}

