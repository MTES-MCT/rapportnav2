extend type Mutation {
  addOrUpdateControlNavigation(
    control: ControlNavigationInput!
  ): ControlNavigation!
  addOrUpdateControlSecurity(control: ControlSecurityInput!): ControlSecurity!
  addOrUpdateControlAdministrative(
    control: ControlAdministrativeInput!
  ): ControlAdministrative!
  addOrUpdateControlGensDeMer(
    control: ControlGensDeMerInput!
  ): ControlGensDeMer!
  deleteControlAdministrative(actionId: String!): Boolean!
  deleteControlSecurity(actionId: String!): Boolean!
  deleteControlNavigation(actionId: String!): Boolean!
  deleteControlGensDeMer(actionId: String!): Boolean!
}

enum ControlType {
  ADMINISTRATIVE
  GENS_DE_MER
  NAVIGATION
  SECURITY
}

enum ControlResult {
  YES
  NO
  NOT_CONTROLLED
  NOT_CONCERNED
}

type ControlNavigation {
  id: String!
  amountOfControls: Int!
  unitShouldConfirm: Boolean
  unitHasConfirmed: Boolean
  observations: String
  infractions: [Infraction]
}

type ControlSecurity {
  id: String!
  amountOfControls: Int!
  unitShouldConfirm: Boolean
  unitHasConfirmed: Boolean
  observations: String
  infractions: [Infraction]
}

type ControlAdministrative {
  id: String!
  amountOfControls: Int!
  unitShouldConfirm: Boolean
  unitHasConfirmed: Boolean
  compliantOperatingPermit: ControlResult
  upToDateNavigationPermit: ControlResult
  compliantSecurityDocuments: ControlResult
  observations: String
  infractions: [Infraction]
}

type ControlGensDeMer {
  id: String!
  amountOfControls: Int!
  unitShouldConfirm: Boolean
  unitHasConfirmed: Boolean
  staffOutnumbered: ControlResult
  upToDateMedicalCheck: ControlResult
  knowledgeOfFrenchLawAndLanguage: ControlResult
  observations: String
  infractions: [Infraction]
}

input ControlNavigationInput {
  id: String
  missionId: String!
  actionControlId: String!
  amountOfControls: Int!
  unitShouldConfirm: Boolean
  unitHasConfirmed: Boolean
  observations: String
}

input ControlSecurityInput {
  id: String
  missionId: String!
  actionControlId: String!
  amountOfControls: Int!
  unitShouldConfirm: Boolean
  unitHasConfirmed: Boolean
  observations: String
}

input ControlAdministrativeInput {
  id: String
  missionId: String!
  actionControlId: String!
  amountOfControls: Int!
  unitShouldConfirm: Boolean
  unitHasConfirmed: Boolean
  compliantOperatingPermit: ControlResult
  upToDateNavigationPermit: ControlResult
  compliantSecurityDocuments: ControlResult
  observations: String
}

input ControlGensDeMerInput {
  id: String
  missionId: String!
  actionControlId: String!
  amountOfControls: Int!
  unitShouldConfirm: Boolean
  unitHasConfirmed: Boolean
  staffOutnumbered: ControlResult
  upToDateMedicalCheck: ControlResult
  knowledgeOfFrenchLawAndLanguage: ControlResult
  observations: String
}
