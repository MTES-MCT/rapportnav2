extend type Mutation {
    patchActionFish(action: ActionFishInput!): PatchedFishAction
}

type PatchedFishAction {
    id: String!
    observationsByUnit: String
    startDateTimeUtc: String
    endDateTimeUtc: String
}

input ActionFishInput {
    missionId: ID!
    actionId: String!
    observationsByUnit: String
    startDateTimeUtc: String
    endDateTimeUtc: String
}

type FishActionData {
    id: String!
    actionDatetimeUtc: String!
    vesselId: Int
    vesselName: String
    latitude: Float
    longitude: Float
    facade: String
    actionType: FishActionType
    controlsToComplete: [ControlType]
    controlAdministrative: ControlAdministrative
    controlGensDeMer: ControlGensDeMer
    controlNavigation: ControlNavigation
    controlSecurity: ControlSecurity
    emitsVms: ControlCheck
    emitsAis: ControlCheck
    licencesMatchActivity: ControlCheck
    logbookMatchesActivity: ControlCheck
    logbookInfractions: [LogbookInfraction]
    licencesAndLogbookObservations: String
    gearOnboard: [GearControl]
    gearInfractions: [GearInfraction]
    speciesOnboard: [SpeciesControl]
    speciesObservations: String
    speciesInfractions: [SpeciesInfraction]
    seizureAndDiversion: Boolean
    seizureAndDiversionComments: String
    hasSomeGearsSeized: Boolean
    hasSomeSpeciesSeized: Boolean
    otherInfractions: [OtherInfraction]
    otherComments: String
    vesselTargeted: ControlCheck
    unitWithoutOmegaGauge: Boolean
    controlQualityComments: String
    feedbackSheetRequired: Boolean
    userTrigram: String
    faoAreas: [String]
    segments: [FleetSegment]
}

type LogbookInfraction {
    infractionType: FishInfractionType
    natinf: Int
    comments: String
}
type GearInfraction {
    infractionType: FishInfractionType
    natinf: Int
    comments: String
}
type SpeciesInfraction {
    infractionType: FishInfractionType
    natinf: Int
    comments: String
}
type OtherInfraction {
    infractionType: FishInfractionType
    natinf: Int
    comments: String
}

type FleetSegment {
    segment: String
    segmentName: String
}

type GearControl {
    comments: String
    controlledMesh: Float
    declaredMesh: Float
    gearCode: String
    gearName: String
    gearWasControlled: Boolean
    hasUncontrolledMesh: Boolean
}

type SpeciesControl {
    speciesCode: String
    nbFish: Float
    declaredWeight: Float
    controlledWeight: Float
    underSized: Boolean
}



enum FishActionType {
    SEA_CONTROL
    LAND_CONTROL
    AIR_CONTROL
    AIR_SURVEILLANCE
    OBSERVATION
}
