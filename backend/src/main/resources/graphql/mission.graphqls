type Query {
  missionExport(missionId: ID): MissionExport
  missions: [Mission]
  mission(missionId: ID): Mission
  missionGeneralInfo(missionId: ID): MissionGeneralInfo
}

type MissionExport {
  fileName: String
  fileContent: String
}

type Mutation {
  updateMission(mission: MissionInput!): Mission!
  updateMissionGeneralInfo(info: MissionGeneralInfoInput!): MissionGeneralInfo!
}

input MissionInput {
  id: ID!
  startDateTimeUtc: String!
  endDateTimeUtc: String!
}

type Mission {
  id: ID!
  missionSource: String!
  startDateTimeUtc: String!
  endDateTimeUtc: String
  actions: [Action]
  generalInfo: MissionGeneralInfo
  openBy: String
  status: MissionStatusEnum
  completenessForStats: CompletenessForStats
}

enum MissionSourceEnum {
  MONITORENV,
  MONITORFISH,
  POSEIDON_CACEM,
  POSEIDON_CNSP,
  RAPPORTNAV,
}

enum MissionStatusEnum {
  UPCOMING,
  PENDING,
  ENDED,
  UNAVAILABLE,
  IN_PROGRESS
}

enum CompletenessForStatsStatusEnum {
  COMPLETE,
  INCOMPLETE,
}

type CompletenessForStats {
  status: CompletenessForStatsStatusEnum
  sources: [MissionSourceEnum]
}

type MissionGeneralInfo {
  id: ID!
  distanceInNauticalMiles: Float
  consumedGOInLiters: Float
  consumedFuelInLiters: Float
}

input MissionGeneralInfoInput {
  id: String
  missionId: String!
  distanceInNauticalMiles: Float
  consumedGOInLiters: Float
  consumedFuelInLiters: Float
}
